"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var logger_exports = {};
__export(logger_exports, {
  Logger: () => Logger
});
module.exports = __toCommonJS(logger_exports);
class Logger {
  constructor(tsLogService, suppressNonAstroLogs = false, logDebug = false) {
    this.tsLogService = tsLogService;
    this.logDebug = logDebug;
    if (suppressNonAstroLogs) {
      const log = this.tsLogService.info.bind(this.tsLogService);
      this.tsLogService.info = (s) => {
        if (s.startsWith("-Astro Plugin-")) {
          log(s);
        }
      };
    }
  }
  log(...args) {
    const str = args.map((arg) => {
      if (typeof arg === "object") {
        try {
          return JSON.stringify(arg);
        } catch (e) {
          return "[object that cannot by stringified]";
        }
      }
      return arg;
    }).join(" ");
    this.tsLogService.info("-Astro Plugin- " + str);
  }
  debug(...args) {
    if (!this.logDebug) {
      return;
    }
    this.log(...args);
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Logger
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2xvZ2dlci50cyJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFTyxNQUFNLE9BQU87QUFBQSxFQUNuQixZQUFvQixjQUFnQyx1QkFBdUIsT0FBZSxXQUFXLE9BQU87QUFBeEY7QUFBc0U7QUFDekYsUUFBSSxzQkFBc0I7QUFDekIsWUFBTSxNQUFNLEtBQUssYUFBYSxLQUFLLEtBQUssS0FBSyxZQUFZO0FBQ3pELFdBQUssYUFBYSxPQUFPLENBQUMsTUFBYztBQUN2QyxZQUFJLEVBQUUsV0FBVyxnQkFBZ0IsR0FBRztBQUNuQyxjQUFJLENBQUM7QUFBQSxRQUNOO0FBQUEsTUFDRDtBQUFBLElBQ0Q7QUFBQSxFQUNEO0FBQUEsRUFFQSxPQUFPLE1BQWE7QUFDbkIsVUFBTSxNQUFNLEtBQ1YsSUFBSSxDQUFDLFFBQVE7QUFDYixVQUFJLE9BQU8sUUFBUSxVQUFVO0FBQzVCLFlBQUk7QUFDSCxpQkFBTyxLQUFLLFVBQVUsR0FBRztBQUFBLFFBQzFCLFNBQVMsR0FBUDtBQUNELGlCQUFPO0FBQUEsUUFDUjtBQUFBLE1BQ0Q7QUFDQSxhQUFPO0FBQUEsSUFDUixDQUFDLEVBQ0EsS0FBSyxHQUFHO0FBQ1YsU0FBSyxhQUFhLEtBQUssb0JBQW9CLEdBQUc7QUFBQSxFQUMvQztBQUFBLEVBRUEsU0FBUyxNQUFhO0FBQ3JCLFFBQUksQ0FBQyxLQUFLLFVBQVU7QUFDbkI7QUFBQSxJQUNEO0FBQ0EsU0FBSyxJQUFJLEdBQUcsSUFBSTtBQUFBLEVBQ2pCO0FBQ0Q7IiwKICAibmFtZXMiOiBbXQp9Cg==
