"use strict";
var import_astro_snapshots = require("./astro-snapshots.js");
var import_language_service = require("./language-service/index.js");
var import_logger = require("./logger.js");
var import_module_loader = require("./module-loader.js");
var import_project_astro_files = require("./project-astro-files.js");
var import_utils = require("./utils.js");
function init(modules) {
  const ts = modules.typescript;
  function create(info) {
    var _a, _b;
    const logger = new import_logger.Logger(info.project.projectService.logger);
    const parsedCommandLine = (_b = (_a = info.languageServiceHost).getParsedCommandLine) == null ? void 0 : _b.call(_a, (0, import_utils.getConfigPathForProject)(info.project));
    if (!isAstroProject(info.project, parsedCommandLine)) {
      logger.log("Detected that this is not an Astro project, abort patching TypeScript");
      return info.languageService;
    }
    logger.log("Starting Astro plugin");
    const snapshotManager = new import_astro_snapshots.AstroSnapshotManager(modules.typescript, info.project.projectService, logger);
    if (parsedCommandLine) {
      new import_project_astro_files.ProjectAstroFilesManager(
        modules.typescript,
        info.project,
        info.serverHost,
        snapshotManager,
        parsedCommandLine
      );
    }
    (0, import_module_loader.patchModuleLoader)(logger, snapshotManager, modules.typescript, info.languageServiceHost, info.project);
    return (0, import_language_service.decorateLanguageService)(info.languageService, snapshotManager, logger);
  }
  function getExternalFiles(project) {
    var _a, _b;
    return (_b = (_a = import_project_astro_files.ProjectAstroFilesManager.getInstance(project.getProjectName())) == null ? void 0 : _a.getFiles()) != null ? _b : [];
  }
  function isAstroProject(project, parsedCommandLine) {
    if (parsedCommandLine) {
      const astroFiles = (0, import_utils.readProjectAstroFilesFromFs)(ts, project, parsedCommandLine);
      if (astroFiles.length > 0)
        return true;
    }
    try {
      const compilerOptions = project.getCompilerOptions();
      const hasAstroInstalled = typeof compilerOptions.configFilePath !== "string" || require.resolve("astro", { paths: [compilerOptions.configFilePath] });
      return hasAstroInstalled;
    } catch (e) {
      project.projectService.logger.info(e);
      return false;
    }
  }
  return { create, getExternalFiles };
}
module.exports = init;
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2luZGV4LnRzIl0sCiAgIm1hcHBpbmdzIjogIjtBQUNBLDZCQUFxQztBQUNyQyw4QkFBd0M7QUFDeEMsb0JBQXVCO0FBQ3ZCLDJCQUFrQztBQUNsQyxpQ0FBeUM7QUFDekMsbUJBQXFFO0FBRXJFLFNBQVMsS0FBSyxTQUEwRTtBQUN2RixRQUFNLEtBQUssUUFBUTtBQUVuQixXQUFTLE9BQU8sTUFBc0Q7QUFYdkU7QUFZRSxVQUFNLFNBQVMsSUFBSSxxQkFBTyxLQUFLLFFBQVEsZUFBZSxNQUFNO0FBQzVELFVBQU0scUJBQW9CLGdCQUFLLHFCQUFvQix5QkFBekIsZ0NBQWdELHNDQUF3QixLQUFLLE9BQU87QUFFOUcsUUFBSSxDQUFDLGVBQWUsS0FBSyxTQUFTLGlCQUFpQixHQUFHO0FBQ3JELGFBQU8sSUFBSSx1RUFBdUU7QUFDbEYsYUFBTyxLQUFLO0FBQUEsSUFDYjtBQUVBLFdBQU8sSUFBSSx1QkFBdUI7QUFFbEMsVUFBTSxrQkFBa0IsSUFBSSw0Q0FBcUIsUUFBUSxZQUFZLEtBQUssUUFBUSxnQkFBZ0IsTUFBTTtBQUN4RyxRQUFJLG1CQUFtQjtBQUN0QixVQUFJO0FBQUEsUUFDSCxRQUFRO0FBQUEsUUFDUixLQUFLO0FBQUEsUUFDTCxLQUFLO0FBQUEsUUFDTDtBQUFBLFFBQ0E7QUFBQSxNQUNEO0FBQUEsSUFDRDtBQUVBLGdEQUFrQixRQUFRLGlCQUFpQixRQUFRLFlBQVksS0FBSyxxQkFBcUIsS0FBSyxPQUFPO0FBQ3JHLGVBQU8saURBQXdCLEtBQUssaUJBQWlCLGlCQUFpQixNQUFNO0FBQUEsRUFDN0U7QUFFQSxXQUFTLGlCQUFpQixTQUFzQztBQXJDakU7QUFzQ0UsWUFBTywrREFBeUIsWUFBWSxRQUFRLGVBQWUsQ0FBQyxNQUE3RCxtQkFBZ0UsZUFBaEUsWUFBOEUsQ0FBQztBQUFBLEVBQ3ZGO0FBRUEsV0FBUyxlQUFlLFNBQTRCLG1CQUFxRDtBQUN4RyxRQUFJLG1CQUFtQjtBQUN0QixZQUFNLGlCQUFhLDBDQUE0QixJQUFJLFNBQVMsaUJBQWlCO0FBRTdFLFVBQUksV0FBVyxTQUFTO0FBQUcsZUFBTztBQUFBLElBQ25DO0FBRUEsUUFBSTtBQUNILFlBQU0sa0JBQWtCLFFBQVEsbUJBQW1CO0FBQ25ELFlBQU0sb0JBQ0wsT0FBTyxnQkFBZ0IsbUJBQW1CLFlBQzFDLFFBQVEsUUFBUSxTQUFTLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixjQUFjLEVBQUUsQ0FBQztBQUVyRSxhQUFPO0FBQUEsSUFDUixTQUFTLEdBQVA7QUFDRCxjQUFRLGVBQWUsT0FBTyxLQUFLLENBQVc7QUFDOUMsYUFBTztBQUFBLElBQ1I7QUFBQSxFQUNEO0FBRUEsU0FBTyxFQUFFLFFBQVEsaUJBQWlCO0FBQ25DO0FBRUEsaUJBQVM7IiwKICAibmFtZXMiOiBbXQp9Cg==
