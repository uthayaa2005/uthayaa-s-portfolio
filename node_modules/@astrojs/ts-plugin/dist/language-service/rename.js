"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var rename_exports = {};
__export(rename_exports, {
  decorateRename: () => decorateRename
});
module.exports = __toCommonJS(rename_exports);
var import_utils = require("../utils.js");
function decorateRename(ls, snapshotManager, logger) {
  const findRenameLocations = ls.findRenameLocations;
  ls.findRenameLocations = (fileName, position, findInStrings, findInComments, providePrefixAndSuffixTextForRename) => {
    const renameLocations = findRenameLocations(
      fileName,
      position,
      findInStrings,
      findInComments,
      providePrefixAndSuffixTextForRename
    );
    return renameLocations == null ? void 0 : renameLocations.map((renameLocation) => {
      const snapshot = snapshotManager.get(renameLocation.fileName);
      if (!(0, import_utils.isAstroFilePath)(renameLocation.fileName) || !snapshot) {
        return renameLocation;
      }
      const textSpan = snapshot.getOriginalTextSpan(renameLocation.textSpan);
      if (!textSpan) {
        return null;
      }
      const converted = {
        ...renameLocation,
        textSpan
      };
      if (converted.contextSpan) {
        converted.contextSpan = void 0;
      }
      logger.debug("Converted rename location ", converted);
      return converted;
    }).filter(import_utils.isNotNullOrUndefined);
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  decorateRename
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL2xhbmd1YWdlLXNlcnZpY2UvcmVuYW1lLnRzIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBLG1CQUFzRDtBQUUvQyxTQUFTLGVBQWUsSUFBd0IsaUJBQXVDLFFBQXNCO0FBQ25ILFFBQU0sc0JBQXNCLEdBQUc7QUFDL0IsS0FBRyxzQkFBc0IsQ0FBQyxVQUFVLFVBQVUsZUFBZSxnQkFBZ0Isd0NBQXdDO0FBQ3BILFVBQU0sa0JBQWtCO0FBQUEsTUFDdkI7QUFBQSxNQUNBO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBO0FBQUEsSUFDRDtBQUNBLFdBQU8sbURBQ0osSUFBSSxDQUFDLG1CQUFtQjtBQUN6QixZQUFNLFdBQVcsZ0JBQWdCLElBQUksZUFBZSxRQUFRO0FBQzVELFVBQUksS0FBQyw4QkFBZ0IsZUFBZSxRQUFRLEtBQUssQ0FBQyxVQUFVO0FBQzNELGVBQU87QUFBQSxNQUNSO0FBR0EsWUFBTSxXQUFXLFNBQVMsb0JBQW9CLGVBQWUsUUFBUTtBQUNyRSxVQUFJLENBQUMsVUFBVTtBQUNkLGVBQU87QUFBQSxNQUNSO0FBRUEsWUFBTSxZQUFZO0FBQUEsUUFDakIsR0FBRztBQUFBLFFBQ0g7QUFBQSxNQUNEO0FBQ0EsVUFBSSxVQUFVLGFBQWE7QUFFMUIsa0JBQVUsY0FBYztBQUFBLE1BQ3pCO0FBQ0EsYUFBTyxNQUFNLDhCQUE4QixTQUFTO0FBQ3BELGFBQU87QUFBQSxJQUNSLEdBQ0MsT0FBTztBQUFBLEVBQ1Y7QUFDRDsiLAogICJuYW1lcyI6IFtdCn0K
